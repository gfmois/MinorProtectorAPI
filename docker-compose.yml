version: '3.2'
services:
  age_classificator:
    image: python:3.10.12
    container_name: age_classificator
    restart: always
    volumes:
      - ./backend/age_classificator:/app
    command: > 
      /bin/bash -c "apt-get update && apt-get install -y build-essential python3-venv libgl1-mesa-glx && 
      python3 -m venv /app/venv &&
      source /app/venv/bin/activate &&
      pip install -r /app/requirements.txt && 
      cd /app && make"
    networks:
      - backend-network
    environment:
      - SOCKETIO_PORT=5002

  face_detector:
    image: python:3.10.12
    container_name: face_detector
    restart: always
    volumes:
      - ./backend/face_detector:/app
    command: >
      /bin/bash -c "apt-get update && apt-get install -y build-essential libffi-dev libopenblas-dev gfortran python3-pip python3-venv libgl1-mesa-glx &&
      python3 -m venv /app/venv &&
      source /app/venv/bin/activate &&
      pip install Flask flask-socketio flask-cors Pillow ultralytics &&
      pip install --no-cache-dir numpy &&
      pip install --no-cache-dir opencv-python-headless &&
      cd /app && make"
    networks:
      - backend-network
    environment:
      - SOCKETIO_PORT=5000

  gateway:
    image: python:3.10.12
    container_name: gateway
    depends_on:
      - face_detector
      - age_classificator
    restart: always
    volumes:
      - ./backend/gateway:/app
    ports:
      - 3000:5001
    command: >
      /bin/bash -c "apt-get update && apt-get install -y build-essential python3-venv libgl1-mesa-glx && 
      python3 -m venv /app/venv &&
      source /app/venv/bin/activate &&
      pip install -r /app/requirements.txt && 
      cd /app && make"
    networks:
      - backend-network
      - frontend-network
    environment:
      - FLASK_APP=main.py

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:80"
    networks:
      - frontend-network

networks:
  backend-network:
  frontend-network: